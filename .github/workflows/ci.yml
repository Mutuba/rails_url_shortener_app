# name: Continuous integration
# on:
#   push:
#     branches: [main, develop, staging]
#   pull_request:
#     branches: [main, develop, staging]

# services:
#   postgres:
#    image: postgres:11
#    env:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: postgres
#    ports: ['5432:5432']
#    options:
#      --health-cmd pg_isready
#      --health-interval 10s
#      --health-timeout 5s
#      --health-retries 5
# steps:
#   - uses: actions/checkout@v2
#   - name: Setup Ruby
#     uses: actions/setup-ruby@v1
#     with:
#       ruby-version: 2.6.7

# - name: Build and run test
#   env:
#     DATABASE_URL: postgres://postgres:@localhost:5432/test
#     RAILS_ENV: test
#     POSTGRES_USER: postgres
#     POSTGRES_PASSWORD: postgres
#   run: |
#     sudo apt-get -yqq install libpq-dev
#     gem install bundler:1.17.3
#     bundle install --jobs 4 --retry 3
#     bundle exec rails db:create
#     bundle exec rails db:migrate
#     RAILS_ENV=test bundle exec rake
name: CI
on:

  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    services: 
      postgres:
        image: postgres:12
        env:
          POSTGRES_PASSWORD: postgres
        ports: ['5432:5432']

    steps:
      - uses: actions/checkout@v2
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1.80.0
        with:
          ruby-version: 2.6.6

      - uses: Borales/actions-yarn@v2.3.0
        with:
          cmd: install

      - name: Install Dependencies
        run: |
          sudo apt install -yqq libpq-dev
          gem install bundler

      - name: Install Gems
        run: |
          bundle install

      - name: Setup database
        env:
          PG_DATABASE: postgres
          PG_HOST: localhost
          PG_USER: postgres
          PG_PASSWORD: password
          RAILS_ENV: test
          WITH_COVERAGE: true
          DISABLE_SPRING: 1
        run: |
          bundle exec rails db:prepare
          bundle exec rake test

      - name: Build and test with rspec
        env:
          PG_DATABASE: postgres
          PG_HOST: localhost
          PG_USER: postgres
          PG_PASSWORD: password
          RAILS_ENV: test
        run: |
          bundle exec rspec spec

      - name: Create Coverage Artifact
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage
          path: coverage/